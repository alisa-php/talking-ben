<?php

namespace App\Controllers;

use Alisa\Context;
use Alisa\Support\Markup;
use Alisa\Yandex\Sessions\Session;
use App\Models\User;
use Throwable;

class MainController
{
    public function beforeRun(Context $context)
    {
        if (!Session::get('already_call')) {
            Session::set('already_call', true);
            user()->increment('call_count');
        }
    }

    public function start(Context $context)
    {
        if (!Session::get('already_call')) {
            Session::set('already_call', true);
            user()->increment('call_count');
        }

        $text = Markup::variant([
            '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–≤–æ–Ω–æ–∫ –ë{{–µ},{+—ç}}–Ω—É...',
            '–ó–≤–æ–Ω—é –ë{{–µ},{+—ç}}–Ω—É, —Å–µ–∫—É–Ω–¥—É...',
            '–ó–≤–æ–Ω—é –ë{{–µ},{+—ç}}–Ω—É, –æ–¥–Ω—É –º–∏–Ω—É—Ç—É...',
            '–ú–∏–Ω—É—Ç–æ—á–∫—É, –Ω–∞–±–∏—Ä–∞—é –ë{{–µ},{+—ç}}–Ω–∞...',
        ]);

        $context->reply("
            {pause:550}

            üìû {$text}

            {text:üí¨ –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ  –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å <<<–¥–∞>>> –∏–ª–∏ <<<–Ω–µ—Ç>>>.}

            {pause:550}

            {audio:allo}
        ", buttons: 'main');
    }

    public function help(Context $context)
    {
        $context->reply('
            üí¨ –°–µ–π—á–∞—Å —Ç—ã —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å —Å –ë{{–µ},{+—ç}}–Ω–æ–º, –∑–∞–¥–∞–≤–∞–π –µ–º—É –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å <<<–¥–∞>>> –∏–ª–∏ <<<–Ω–µ—Ç>>>.

            üí¨ –ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å, —Å–∫–∞–∂–∏ –µ–º—É <<<–ø–æ–∫–∞>>>.

            üí¨ –ê —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, —Å–∫–∞–∂–∏ <<<—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞>>>.

            üìû –ü–µ—Ä–µ–¥–∞—é —Ç—Ä—É–±–∫—É –æ–±—Ä–∞—Ç–Ω–æ –ë{{–µ},{+—ç}}–Ω—É.

            {audio:ben}
        ', buttons: 'main');
    }

    public function features(Context $context)
    {
        $context->reply('
            üí¨ –ó–∞–¥–∞–≤–∞–π –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ë{{–µ},{+—ç}}–Ω—É, –∞ –æ–Ω –æ—Ç–≤–µ—Ç–∏—Ç: <<<–¥–∞>>> –∏–ª–∏ <<<–Ω–µ—Ç>>>.

            üìû –ü–µ—Ä–µ–¥–∞—é —Ç—Ä—É–±–∫—É –æ–±—Ä–∞—Ç–Ω–æ –ë{{–µ},{+—ç}}–Ω—É.

            {audio:ben}
        ', buttons: 'main');
    }

    public function bye(Context $context)
    {
        $context->finish('üí¨üê∂ ...', '{audio:phone-drop}');
    }

    public function stats(Context $context)
    {
        $userQuestionCount = user()->question_count;
        $userCallCount = user()->call_count;

        $totalQuestionCount = User::sum('question_count');
        $totalCallCount = User::sum('call_count');

        if ($totalQuestionCount != 0) {
            $userQuestionPercentage = round(($userQuestionCount / $totalQuestionCount) * 100);
        } else {
            $userQuestionPercentage = 0;
        }

        if ($totalCallCount != 0) {
            $userCallPercentage = round(($userCallCount / $totalCallCount) * 100);
        } else {
            $userCallPercentage = 0;
        }

        $context->reply("
            –í—ã –ø–æ–∑–≤–æ–Ω–∏–ª–∏ –ë{{–µ},{+—ç}}–Ω—É üìû {{$userCallCount}: —Ä–∞–∑, —Ä–∞–∑–∞, —Ä–∞–∑} –∏ –∑–∞–¥–∞–ª–∏ üí¨ {{$userQuestionCount}: –≤–æ–ø—Ä–æ—Å, –≤–æ–ø—Ä–æ—Å–∞, –≤–æ–ø—Ä–æ—Å–æ–≤}!

            –ê –≤—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ø–Ω–¥–µ–∫—Å–∞ –ø–æ–∑–≤–æ–Ω–∏–ª–∏ –ë{{–µ},{+—ç}}–Ω—É üìû {{$totalCallCount}: —Ä–∞–∑, —Ä–∞–∑–∞, —Ä–∞–∑} (–∏–∑ –Ω–∏—Ö –≤–∞—à–∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç {$userCallPercentage}%) –∏ –∑–∞–¥–∞–ª–∏ üí¨ {{$totalQuestionCount}: –≤–æ–ø—Ä–æ—Å, –≤–æ–ø—Ä–æ—Å–∞, –≤–æ–ø—Ä–æ—Å–æ–≤} (–∏–∑ –Ω–∏—Ö –≤–∞—à–∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç {$userQuestionPercentage}%).

            üìû –ü–µ—Ä–µ–¥–∞—é —Ç—Ä—É–±–∫—É –æ–±—Ä–∞—Ç–Ω–æ –ë{{–µ},{+—ç}}–Ω—É.

            {audio:ben}
        ", buttons: 'main');
    }

    public function fallback(Context $context)
    {
        user()->increment('question_count');

        $dice = mt_rand(1, 10);

        if (in_array($dice, [1, 2, 3])) {
            $text = 'üí¨üê∂ Yee-es...';
            $sound = 'yes';
        }

        if (in_array($dice, [4, 5, 6])) {
            $text = 'üí¨üê∂ No.';
            $sound = 'no';
        }

        if (in_array($dice, [7, 8, 9])) {
            $text = 'üí¨üê∂ Hoho-ho...';
            $sound = 'hohoho';
        }

        if (in_array($dice, [10])) {
            $text = 'üí¨üê∂ Ughh.';
            $sound = 'ughh';
        }

        $context->reply($text, '{audio:' . $sound . '}', buttons: 'main');
    }

    public function exception(Context $context, Throwable $exception)
    {
        $dir = storage_path('logs/exceptions/' . date('Y-m-d'));

        if (!file_exists($dir)) {
            mkdir($dir, 0776, true);
        }

        $file = $dir . '/exceptions.log';

        file_put_contents($file, '[' . date('d.m.Y H:i:s') . "] \n[context] -> " . $context . "\n[exception] -> " . $exception . "\n\n", FILE_APPEND);
    }
}